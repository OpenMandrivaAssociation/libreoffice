diff -up libreoffice-7.3.3.1/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx.omv~ libreoffice-7.3.3.1/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx
--- libreoffice-7.3.3.1/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx.omv~	2022-04-21 17:42:51.453409704 +0200
+++ libreoffice-7.3.3.1/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx	2022-04-21 17:47:05.354932480 +0200
@@ -474,12 +474,9 @@ int PDFOutDev::parseFont( long long nNew
     {
         // TODO(P3): Unfortunately, need to read stream twice, since
         // we must write byte count to stdout before
-        char* pBuf = gfxFont->readEmbFontFile( m_pDoc->getXRef(), &nSize );
+        std::optional<std::vector<unsigned char> > pBuf = gfxFont->readEmbFontFile( m_pDoc->getXRef() );
         if( pBuf )
-        {
             aNewFont.isEmbedded = true;
-            gfree(pBuf);
-        }
     }
 
     m_aFontMap[ nNewId ] = aNewFont;
@@ -491,22 +488,19 @@ void PDFOutDev::writeFontFile( GfxFont*
     if( gfxFont->getType() != fontTrueType && gfxFont->getType() != fontType1 )
         return;
 
-    int nSize = 0;
-    char* pBuf = gfxFont->readEmbFontFile( m_pDoc->getXRef(), &nSize );
+    std::optional<std::vector<unsigned char> > pBuf = gfxFont->readEmbFontFile( m_pDoc->getXRef() );
     if( !pBuf )
         return;
 
     // ---sync point--- see SYNC STREAMS above
     fflush(stdout);
 
-    if( fwrite(pBuf, sizeof(char), nSize, g_binary_out) != static_cast<size_t>(nSize) )
+    if( fwrite(pBuf->data(), sizeof(char), pBuf->size(), g_binary_out) != pBuf->size() )
     {
-        gfree(pBuf);
         exit(1); // error
     }
     // ---sync point--- see SYNC STREAMS above
     fflush(g_binary_out);
-    gfree(pBuf);
 }
 
 #if POPPLER_CHECK_VERSION(0, 83, 0)
@@ -759,7 +753,7 @@ void PDFOutDev::updateFont(GfxState *sta
 {
     assert(state);
 
-    GfxFont *gfxFont = state->getFont();
+    const std::shared_ptr<GfxFont> gfxFont = state->getFont();
     if( !gfxFont )
         return;
 
@@ -776,7 +770,7 @@ void PDFOutDev::updateFont(GfxState *sta
         m_aFontMap.find( fontID );
     if( it == m_aFontMap.end() )
     {
-        nEmbedSize = parseFont( fontID, gfxFont, state );
+        nEmbedSize = parseFont( fontID, gfxFont.get(), state );
         it = m_aFontMap.find( fontID );
     }
 
@@ -806,7 +800,7 @@ void PDFOutDev::updateFont(GfxState *sta
 
     if (nEmbedSize)
     {
-        writeFontFile(gfxFont);
+        writeFontFile(gfxFont.get());
     }
 }
 
